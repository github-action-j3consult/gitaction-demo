name: Test
on:
  workflow_call:
env:
  FLAGSMITH_KEY: ser.ZsKaMfvLiFvPtyS6LEgjMq

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node Environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
      - name: Install Dependencies
        run: npm ci
      - name: Check for Formatting Errors
        run: npm run format
      - name: Check for ESLint Errors
        run: npm run lint
      - name: Check for Type Errors
        run: npm run typecheck
      - name: Build Project
        run: npm run build
        env:
          FLAGSMITH_KEY: ${{ env.FLAGSMITH_KEY }}

      - uses: actions/upload-artifact@v3
        with:
          name: build
          path: .next/
      - name: Run Unit Tests
        run: npm run test
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: coverage
          path: coverage/
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run E2E Tests
        run: npm run test:e2e
        env:
          FLAGSMITH_KEY: ${{ env.FLAGSMITH_KEY }}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/

      - name: Build and Deploy steps
        uses: appleboy/docker-ecr-action@master
        with:
          access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          registry: ${{ secrets.REGISTRY }}
          repo: cicdimg
          region: ${{ vars.AWS_REGION }}
          tags: latest,${{ github.run_number }}
          daemon_off: false
          dockerfile: ./Dockerfile
          context: ./
        env:
          FLAGSMITH_KEY: ${{ env.FLAGSMITH_KEY }}

      - name: Send a Slack Message on Failure
        uses: slackapi/slack-github-action@v1.24.0
        if: failure()
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "ðŸ›‘ *<https://github.com/${{github.repository}}/actions/runs/${{ github.run_id }}|${{ github.workflow }} workflow run>* failed."
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
